    /**
{% block phpdoc_method_header %}
     * Update a {{ entity }} entity.
     *
     * @param Request $request
     * @param $entity
     * @return \Symfony\Component\HttpFoundation\Response
     * @internal param $id
     * @ParamConverter("entity", converter="fos_rest.request_body")
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
{% endif %}
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function put{{ entity }}Action(Request $request, {{ entity }} $entity)
{% endblock method_definition %}
    {
{% block method_body %}

        try {
            $em = $this->getDoctrine()->getManager();
            $old_entity = $em->getRepository('{{ bundle }}:{{ entity }}')->find($entity->getId());
            $form = $this->createForm(new {{ entity }}Type(), $old_entity, array("method" => $request->getMethod()));
            $this->formBind($form, $entity, $old_entity);
            $em->merge($entity);
            if ($form->isValid()) {
                $em->flush();

                return $this->view($entity, Codes::HTTP_OK);
            }

            return $this->view(array('errors' => $form->getErrors()), Codes::HTTP_INTERNAL_SERVER_ERROR);
        } catch (\Exception $e) {
            return $this->view($e->getMessage(), Codes::HTTP_INTERNAL_SERVER_ERROR);
        }
{% endblock method_body %}
{% block method_return %}

{% endblock method_return %}
    }
{% block form %}

{% endblock form %}
