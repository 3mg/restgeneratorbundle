<?php

namespace {{ namespace }}\Controller{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

{% block use_statements %}
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Form\Form;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
{% if 'annotation' == format -%}
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
{%- endif %}

use {{ namespace }}\Entity\{{ entity }};
use {{ namespace }}\Form\{{ entity }}Type;

use FOS\RestBundle\View\View;
{% endblock use_statements %}

/**
{% block phpdoc_class_header %}
 * {{ entity }} controller.
{% endblock phpdoc_class_header %}
 *
{% block phpdoc_class_annotations %}
{% if 'annotation' == format %}
 * @Route("/{{ route_prefix }}")
{% endif %}
{% endblock phpdoc_class_annotations %}
 */
{% block class_definition %}
class {{ entity_class }}RESTController extends Controller
{% endblock class_definition %}
{
{% block class_body %}
    {%- include 'rest/actions/getById.php.twig' %}

    {%- include 'rest/actions/getAll.php.twig' %}

    {%- include 'rest/actions/post.php.twig' %}

    {%- include 'rest/actions/put.php.twig' %}

    {%- include 'rest/actions/delete.php.twig' %}

    /**
     * Create the {{ entity }} form
     *
     * @param $entity
     * @param $method
     * @return Form|\Symfony\Component\Form\FormInterface
     */
    protected function createDaForm($entity = null, $method)
    {

        $form = $this->container->get('form.factory')->createNamed(
            null, //since we're not including the form name in the request, set this to null
            new {{ entity }}Type(),
            $entity,
            array('method' => $method)
        );

        return $form;
    }

    /**
    * Remove extra fields from the submitted data and then submit it
    *
    * @param Form $form
    * @param $data
    */
    protected function formBind(Form $form, $data)
    {
        $form_fields = $form->all();

        //Remove all fields from the submitted data that don't have corresponding form fields
        $data = array_intersect_key($data, $form_fields);

        //Remove fields from the form that don't have any data, so we don't erase anything by accident
        foreach ($form_fields as $name => $field) {
            if (!isset($data[$name])) {
                $form->remove($name);
            }
        }

        $form->submit($data);
    }

    /**
    * Create the Rest View
    *
    * @param $entity
    * @param null $statusCode
    * @param string $template
    * @return \Symfony\Component\HttpFoundation\Response
    */
    protected function view($entity, $statusCode = null, $template = "")
    {
        $view = new View($entity, $statusCode);
        //$view->setTemplate($template);
        $view->setData(array('data'=>$entity));

        $view_handler = $this->get('fos_rest.view_handler');

        return $view_handler->handle($view);
    }
{% endblock class_body %}
}
